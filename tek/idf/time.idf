
;
;	$Id: time.idf,v 1.7 2005/09/13 02:44:41 tmueller Exp $
;	teklib/tek/idf/time.idf - Time interface description
;
;	See copyright notice in teklib/COPYRIGHT
;

.class library
.name time					; as in tek_init_...
;.filename time				; as in "exec.h", default .name
;.this TAPTR time			; first/implicit argument, default "TAPTR base"
;.base time					; function vector base, default .this
;.author Timm S. Mueller <tmueller at neoscientists.org>
.copyright See copyright notice in teklib/COPYRIGHT

.prefix TTime				; name prefix heading non-inline functions
.iprefix T					; name prefix heading inline functions
.ibase TAPTR TTimeBase		; inline module base
.inline	on					; activate generation of inlines

.defv TVOID					; aliases for void
.defp TAPTR					; pointer types
.defi TINT, TUINT, TBOOL	; 32bit integer types
.defd TDOUBLE				; double types

.offset 9
TVOID SubTime(TTIME *a, TTIME *b)
TVOID AddTime(TTIME *a, TTIME *b)
TINT CmpTime(TTIME *a, TTIME *b)
TAPTR AllocTimeRequest(TTAGITEM *tags)
TVOID FreeTimeRequest(TAPTR req)
TVOID QueryTime(TAPTR req, TTIME *t)
TINT GetDate(TAPTR req, TDATE *dt, TINT *tz)
TUINT WaitTime(TAPTR req, TTIME *t, TUINT sig)
TUINT WaitDate(TAPTR req, TDATE *dt, TUINT sig)
TBOOL MakeDate(TDATE *dt, TINT d, TINT m, TINT y, TTIME *t)
TVOID AddDate(TDATE *dt, TINT nd, TTIME *t)
TVOID SubDate(TDATE *dt, TINT nd, TTIME *t)
TINT DiffDate(TDATE *dt1, TDATE *dt2, TTIME *t)
TBOOL IsLeapYear(TINT year)
TBOOL IsValidDate(TINT d, TINT m, TINT y)
TBOOL PackDate(struct TDateBox *db, TDATE *dt)
TVOID UnpackDate(TDATE *dt, struct TDateBox *db, TUINT flg)
TDOUBLE DateToJulian(TDATE *dt)
TVOID JulianToDate(TDOUBLE jd, TDATE *dt)
TDOUBLE MYToJulian(TINT m, TINT y)
TDOUBLE JulianToDMY(TDOUBLE jd, TINT *pd, TINT *pm, TINT *py)
TVOID YDayToDM(TINT yd, TINT y, TINT *pd, TINT *pm)
TINT DMYToYDay(TINT d, TINT m, TINT y)
TINT GetWeekDay(TINT d, TINT m, TINT y)
TINT GetWeekNumber(TINT d, TINT m, TINT y)
TVOID Delay(TAPTR req, TTIME *t)

.end
