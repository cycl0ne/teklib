
;
;	$Id: hal.idf,v 1.2 2006/09/10 00:58:47 tmueller Exp $
;	teklib/tek/idf/hal.idf - HAL interface description
;
;	See copyright notice in teklib/COPYRIGHT
;

.class library
.name hal					; as in tek_init_...
;.this struct THALBase *hal	; first/implicit argument, default "TAPTR base"
.copyright See copyright notice in teklib/COPYRIGHT

.prefix THAL				; name prefix heading non-inline functions

.defv void					; aliases for void
.defp TAPTR, TTASKFUNC, TSTRPTR	; pointer types
.defi TINT, TUINT, TBOOL	; 32bit integer types
.deft TTAG
.defs TUINT16
.defb TUINT8
.defd TDOUBLE

.offset 9
TTAG GetAttr(TUINT tag, TTAG defval)
TAPTR Alloc(TSIZE size)
void Free(TAPTR mem, TSIZE size)
TAPTR Realloc(TAPTR mem, TSIZE oldsize, TSIZE newsize)
void CopyMem(TAPTR src, TAPTR dst, TUINT size)
void FillMem(TAPTR dst, TSIZE len, TUINT8 val)
TBOOL InitLock(struct THALObject *lock)
void DestroyLock(struct THALObject *lock)
void Lock(struct THALObject *lock)
void Unlock(struct THALObject *lock)
TBOOL InitThread(struct THALObject *thread, TTASKFUNC func, TAPTR data)
void DestroyThread(struct THALObject *thread)
TAPTR FindSelf()
TUINT Wait(TUINT signals)
void Signal(struct THALObject *thread, TUINT signals)
TUINT SetSignal(TUINT newsigs, TUINT sigs)
TAPTR LoadModule(TSTRPTR name, TUINT16 version, TSIZE *possize, TSIZE *negsize)
TBOOL CallModule(TAPTR mod, struct TTask *task, TAPTR data)
void UnloadModule(TAPTR mod)
TBOOL ScanModules(TSTRPTR prefix, struct THook *hook)

.end
